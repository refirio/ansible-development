- name: install epel
  yum:
    name: epel-release
    state: present

- name: install remi
  yum:
    name: http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
    state: present

- name: install httpd and php
  yum:
    enablerepo: remi-php74
    name:
      - httpd
      - php
      - php-cli
      - php-common
      - php-devel
      - php-fpm
      - php-mbstring
      - php-mysqlnd
      - php-pgsql
      - php-pdo
      - php-gd
      - php-xml
      - php-intl
      - php-zip
  notify:
    - restart httpd

- name: install multiple php
  yum:
    name:
      - php{{ item.version }}
      - php{{ item.version }}-php-cli
      - php{{ item.version }}-php-common
      - php{{ item.version }}-php-devel
      - php{{ item.version }}-php-fpm
      - php{{ item.version }}-php-mbstring
      - php{{ item.version }}-php-mysqlnd
      - php{{ item.version }}-php-pgsql
      - php{{ item.version }}-php-pdo
      - php{{ item.version }}-php-gd
      - php{{ item.version }}-php-xml
      - php{{ item.version }}-php-intl
      - php{{ item.version }}-php-zip
  with_items:
    - { version: "70" }
    - { version: "71" }
    - { version: "72" }
    - { version: "73" }
    - { version: "74" }
  notify:
    - restart multiple-php-fpm

- name: create the configuration file
  template: src=role-web/templates/main.conf.j2 dest=/etc/httpd/conf.d/main.conf owner=root group=root mode=0644
  notify:
    - restart httpd

- name: create the virtualhost configuration file
  template: src=role-web/templates/vhosts.conf.j2 dest=/etc/httpd/conf.d/vhosts.conf owner=root group=root mode=0644
  notify:
    - restart httpd

- name: create the php configuration file
  template: src=role-web/templates/php.ini.j2 dest=/etc/php.d/php.ini owner=root group=root mode=0644
  notify:
    - restart httpd

- name: create the multiple php configuration file
  template: src=role-web/templates/php.ini.j2 dest=/etc/opt/remi/php{{ item.version }}/php.d/php.ini owner=root group=root mode=0644
  with_items:
    - { version: "70" }
    - { version: "71" }
    - { version: "72" }
    - { version: "73" }
    - { version: "74" }
  notify:
    - restart multiple-php-fpm

- name: modify php-fpm.d/www.conf
  replace:
    dest: /etc/opt/remi/php{{ item.version }}/php-fpm.d/www.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { version: "70", regexp: "9000", replace: "9070" }
    - { version: "70", regexp: "pm = dynamic", replace: "pm = ondemand" }
    - { version: "71", regexp: "9000", replace: "9071" }
    - { version: "71", regexp: "pm = dynamic", replace: "pm = ondemand" }
    - { version: "72", regexp: "9000", replace: "9072" }
    - { version: "72", regexp: "pm = dynamic", replace: "pm = ondemand" }
    - { version: "73", regexp: "9000", replace: "9073" }
    - { version: "73", regexp: "pm = dynamic", replace: "pm = ondemand" }
    - { version: "74", regexp: "9000", replace: "9074" }
    - { version: "74", regexp: "pm = dynamic", replace: "pm = ondemand" }
  notify:
    - restart php-fpm
    - restart multiple-php-fpm

- name: check composer
  stat: path=/usr/local/bin/composer
  register: composer_bin
  tags: composer

- block:
  - name: download composer
    get_url:
      url: https://getcomposer.org/installer
      dest: /tmp/installer

  - name: install composer
    shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin

  - name: rename composer.phar to composer
    shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer

  when: not composer_bin.stat.exists
  tags: composer

- name: check composer1
  stat: path=/usr/local/bin/composer1
  register: composer1_bin
  tags: composer1

- block:
  - name: download composer1
    shell: curl -sS https://getcomposer.org/installer | php -- --version=1.10.15

  - name: rename composer.phar to composer1
    shell: mv composer.phar /usr/local/bin/composer1

  when: not composer1_bin.stat.exists
  tags: composer1

- name: check directory for main
  stat: path=/var/www/main
  register: directory_main
  tags: main

- block:
  - name: create directory for main
    file:
      dest: /var/www/main
      owner: "{{ web.username }}"
      group: "{{ web.username }}"
      mode: 0755
      state: directory

  - name: create directory for html
    file:
      dest: /var/www/main/html
      owner: "{{ web.username }}"
      group: "{{ web.username }}"
      mode: 0755
      state: directory

  - name: create the index file
    template: src=role-web/templates/index.php.j2 dest=/var/www/main/html/index.php owner="{{ web.username }}" group="{{ web.username }}" mode=0644

  when: not directory_main.stat.exists
  tags: main

- name: enable autostart for httpd
  service: name=httpd enabled=yes

- name: enable autostart for php-fpm
  service: name=php-fpm enabled=yes

- name: enable autostart for multiple php-fpm
  service: name=php{{ item.version }}-php-fpm enabled=yes
  with_items:
    - { version: "70" }
    - { version: "71" }
    - { version: "72" }
    - { version: "73" }
    - { version: "74" }
